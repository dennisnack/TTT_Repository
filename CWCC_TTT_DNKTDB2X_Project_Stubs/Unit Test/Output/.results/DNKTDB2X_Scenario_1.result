<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 18.2.5.v20180129-1916_48?>
<!--Topaz for Total Test 18.2.5.v20180129-1916_48 Feb 26, 2018 7:55:27 AM-->
<result:result xmlns:result="http://www.compuware.com/model/xml/result"><result:testsuite errorCount="0" failureCount="0" testCount="259" testsuite="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test%5C.temp/DNKTDB2X_Scenario_1.testsuite"><result:testscenarios errorCount="0" failureCount="0" testCount="259" testscenario="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Scenarios/DNKTDB2X_Scenario_1.testscenario"><result:testcases errorCount="0" failureCount="0" testCount="259" testcase="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Scenarios/DNKTDB2X_Scenario_1.testscenario%23DNKTDB2XCase1"><result:results expectedAssert="=" expectedValue="5" expression="BigDecimalCreator.make('5').compareTo(output.arg0.PARMINFO.PARM_LTH) eq 0" name="Check for PARM_LTH" result="Success"/><result:results expectedAssert="=" expectedValue="00001" expression="'00001' eq output.arg0.PARMINFO.PARM_DATA" name="Check for PARM_DATA" result="Success"/><result:results expectedAssert="=" expectedValue="1508" expression="BigDecimalCreator.make('1508').compareTo(output.arg0.PARMINFO.GRAND_TOTAL) eq 0" name="Check for GRAND_TOTAL" result="Success"/><result:results expectedAssert="=" expectedValue="8" expression="BigDecimalCreator.make('8').compareTo(output.arg0.PARMINFO.TOTAL_RECORD) eq 0" name="Check for TOTAL_RECORD" result="Success"/><result:stubAssertion errorCount="0" failureCount="0" testCount="195" stub="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.0"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.BLANK_LINE.BLANK_LINE" name="Check for BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.1"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.BLANK_LINE.BLANK_LINE" name="Check for BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.2"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.BLANK_LINE.BLANK_LINE" name="Check for BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="7" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.3"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR1.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="RUN DATE" expression="'RUN DATE' eq result.arg0.EMPLOYEE_HDR1.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR1.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="EMPLOYEE COMPENSATION REPORT" expression="'EMPLOYEE COMPENSATION REPORT' eq result.arg0.EMPLOYEE_HDR1.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR1.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="PAGE" expression="'PAGE' eq result.arg0.EMPLOYEE_HDR1.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="1" expression="BigDecimalCreator.make('1').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_PAGE) eq 0" name="Check for EMP_PAGE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.4"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.BLANK_LINE.BLANK_LINE" name="Check for BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.5"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.BLANK_LINE.BLANK_LINE" name="Check for BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="5" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.6"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR2.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="HIRE" expression="'HIRE' eq result.arg0.EMPLOYEE_HDR2.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR2.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="YRS OF" expression="'YRS OF' eq result.arg0.EMPLOYEE_HDR2.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR2.FILLER4" name="Check for FILLER4" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="18" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.7"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="EMPLOYEE NAME" expression="'EMPLOYEE NAME' eq result.arg0.EMPLOYEE_HDR3.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="REGION" expression="'REGION' eq result.arg0.EMPLOYEE_HDR3.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="TYPE" expression="'TYPE' eq result.arg0.EMPLOYEE_HDR3.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="DATE" expression="'DATE' eq result.arg0.EMPLOYEE_HDR3.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER8" name="Check for FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="SERVICE" expression="'SERVICE' eq result.arg0.EMPLOYEE_HDR3.FILLER9" name="Check for FILLER9" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER10" name="Check for FILLER10" result="Success"/><result:results expectedAssert="=" expectedValue="SALARY" expression="'SALARY' eq result.arg0.EMPLOYEE_HDR3.FILLER11" name="Check for FILLER11" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER12" name="Check for FILLER12" result="Success"/><result:results expectedAssert="=" expectedValue="O/T" expression="'O/T' eq result.arg0.EMPLOYEE_HDR3.FILLER13" name="Check for FILLER13" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER14" name="Check for FILLER14" result="Success"/><result:results expectedAssert="=" expectedValue="COMMISSION" expression="'COMMISSION' eq result.arg0.EMPLOYEE_HDR3.FILLER15" name="Check for FILLER15" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_HDR3.FILLER16" name="Check for FILLER16" result="Success"/><result:results expectedAssert="=" expectedValue="TOTAL" expression="'TOTAL' eq result.arg0.EMPLOYEE_HDR3.FILLER17" name="Check for FILLER17" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.8"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.BLANK_LINE.BLANK_LINE" name="Check for BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="22" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.9"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="JOHN SMITH" expression="'JOHN SMITH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" name="Check for EMP_DTL_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="NORTH" expression="'NORTH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" name="Check for EMP_DTL_REGION" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="H" expression="'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" name="Check for EMP_DTL_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="10" expression="BigDecimalCreator.make('10').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0" name="Check for EMP_DTL_HIRE_MM" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" name="Check for EMP_DTL_SLASH1" result="Success"/><result:results expectedAssert="=" expectedValue="15" expression="BigDecimalCreator.make('15').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0" name="Check for EMP_DTL_HIRE_DD" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" name="Check for EMP_DTL_SLASH2" result="Success"/><result:results expectedAssert="=" expectedValue="81" expression="BigDecimalCreator.make('81').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0" name="Check for EMP_DTL_HIRE_YY" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="36" expression="BigDecimalCreator.make('36').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0" name="Check for EMP_DTL_YRS_OF_SERVICE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="75.00" expression="BigDecimalCreator.make('75.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0" name="Check for EMP_DTL_WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0" name="Check for EMP_DTL_OT" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0" name="Check for EMP_DTL_COMM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER8" name="Check for FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="75.00" expression="BigDecimalCreator.make('75.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0" name="Check for EMP_DTL_TOTAL" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="22" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.10"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="GAIL LAWRENCE" expression="'GAIL LAWRENCE' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" name="Check for EMP_DTL_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="SOUTH" expression="'SOUTH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" name="Check for EMP_DTL_REGION" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="H" expression="'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" name="Check for EMP_DTL_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="6" expression="BigDecimalCreator.make('6').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0" name="Check for EMP_DTL_HIRE_MM" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" name="Check for EMP_DTL_SLASH1" result="Success"/><result:results expectedAssert="=" expectedValue="25" expression="BigDecimalCreator.make('25').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0" name="Check for EMP_DTL_HIRE_DD" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" name="Check for EMP_DTL_SLASH2" result="Success"/><result:results expectedAssert="=" expectedValue="84" expression="BigDecimalCreator.make('84').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0" name="Check for EMP_DTL_HIRE_YY" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="33" expression="BigDecimalCreator.make('33').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0" name="Check for EMP_DTL_YRS_OF_SERVICE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="95.00" expression="BigDecimalCreator.make('95.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0" name="Check for EMP_DTL_WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0" name="Check for EMP_DTL_OT" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0" name="Check for EMP_DTL_COMM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER8" name="Check for FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="95.00" expression="BigDecimalCreator.make('95.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0" name="Check for EMP_DTL_TOTAL" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="22" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.11"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="KATIE WILLIAMS" expression="'KATIE WILLIAMS' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" name="Check for EMP_DTL_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="SOUTH" expression="'SOUTH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" name="Check for EMP_DTL_REGION" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="H" expression="'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" name="Check for EMP_DTL_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="10" expression="BigDecimalCreator.make('10').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0" name="Check for EMP_DTL_HIRE_MM" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" name="Check for EMP_DTL_SLASH1" result="Success"/><result:results expectedAssert="=" expectedValue="2" expression="BigDecimalCreator.make('2').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0" name="Check for EMP_DTL_HIRE_DD" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" name="Check for EMP_DTL_SLASH2" result="Success"/><result:results expectedAssert="=" expectedValue="96" expression="BigDecimalCreator.make('96').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0" name="Check for EMP_DTL_HIRE_YY" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="21" expression="BigDecimalCreator.make('21').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0" name="Check for EMP_DTL_YRS_OF_SERVICE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="880.00" expression="BigDecimalCreator.make('880.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0" name="Check for EMP_DTL_WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0" name="Check for EMP_DTL_OT" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0" name="Check for EMP_DTL_COMM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER8" name="Check for FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="880.00" expression="BigDecimalCreator.make('880.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0" name="Check for EMP_DTL_TOTAL" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="22" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.12"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="MARCIA SULLIVAN" expression="'MARCIA SULLIVAN' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" name="Check for EMP_DTL_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="EAST" expression="'EAST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" name="Check for EMP_DTL_REGION" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="H" expression="'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" name="Check for EMP_DTL_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="4" expression="BigDecimalCreator.make('4').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0" name="Check for EMP_DTL_HIRE_MM" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" name="Check for EMP_DTL_SLASH1" result="Success"/><result:results expectedAssert="=" expectedValue="5" expression="BigDecimalCreator.make('5').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0" name="Check for EMP_DTL_HIRE_DD" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" name="Check for EMP_DTL_SLASH2" result="Success"/><result:results expectedAssert="=" expectedValue="93" expression="BigDecimalCreator.make('93').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0" name="Check for EMP_DTL_HIRE_YY" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="24" expression="BigDecimalCreator.make('24').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0" name="Check for EMP_DTL_YRS_OF_SERVICE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="120.00" expression="BigDecimalCreator.make('120.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0" name="Check for EMP_DTL_WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="18.00" expression="BigDecimalCreator.make('18.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0" name="Check for EMP_DTL_OT" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0" name="Check for EMP_DTL_COMM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER8" name="Check for FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="138.00" expression="BigDecimalCreator.make('138.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0" name="Check for EMP_DTL_TOTAL" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="22" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.13"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="JAMES MORRISON" expression="'JAMES MORRISON' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" name="Check for EMP_DTL_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="EAST" expression="'EAST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" name="Check for EMP_DTL_REGION" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="H" expression="'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" name="Check for EMP_DTL_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="9" expression="BigDecimalCreator.make('9').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0" name="Check for EMP_DTL_HIRE_MM" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" name="Check for EMP_DTL_SLASH1" result="Success"/><result:results expectedAssert="=" expectedValue="13" expression="BigDecimalCreator.make('13').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0" name="Check for EMP_DTL_HIRE_DD" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" name="Check for EMP_DTL_SLASH2" result="Success"/><result:results expectedAssert="=" expectedValue="91" expression="BigDecimalCreator.make('91').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0" name="Check for EMP_DTL_HIRE_YY" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="26" expression="BigDecimalCreator.make('26').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0" name="Check for EMP_DTL_YRS_OF_SERVICE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="101.75" expression="BigDecimalCreator.make('101.75').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0" name="Check for EMP_DTL_WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0" name="Check for EMP_DTL_OT" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0" name="Check for EMP_DTL_COMM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER8" name="Check for FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="101.75" expression="BigDecimalCreator.make('101.75').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0" name="Check for EMP_DTL_TOTAL" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="22" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.14"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="THOMAS LONG" expression="'THOMAS LONG' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" name="Check for EMP_DTL_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="WEST" expression="'WEST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" name="Check for EMP_DTL_REGION" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="H" expression="'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" name="Check for EMP_DTL_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="3" expression="BigDecimalCreator.make('3').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0" name="Check for EMP_DTL_HIRE_MM" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" name="Check for EMP_DTL_SLASH1" result="Success"/><result:results expectedAssert="=" expectedValue="31" expression="BigDecimalCreator.make('31').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0" name="Check for EMP_DTL_HIRE_DD" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" name="Check for EMP_DTL_SLASH2" result="Success"/><result:results expectedAssert="=" expectedValue="87" expression="BigDecimalCreator.make('87').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0" name="Check for EMP_DTL_HIRE_YY" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="30" expression="BigDecimalCreator.make('30').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0" name="Check for EMP_DTL_YRS_OF_SERVICE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="100.00" expression="BigDecimalCreator.make('100.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0" name="Check for EMP_DTL_WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0" name="Check for EMP_DTL_OT" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0" name="Check for EMP_DTL_COMM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER8" name="Check for FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="100.00" expression="BigDecimalCreator.make('100.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0" name="Check for EMP_DTL_TOTAL" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="22" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.15"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="SAMUEL ADDAMS" expression="'SAMUEL ADDAMS' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" name="Check for EMP_DTL_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="WEST" expression="'WEST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" name="Check for EMP_DTL_REGION" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="H" expression="'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" name="Check for EMP_DTL_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="1" expression="BigDecimalCreator.make('1').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0" name="Check for EMP_DTL_HIRE_MM" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" name="Check for EMP_DTL_SLASH1" result="Success"/><result:results expectedAssert="=" expectedValue="2" expression="BigDecimalCreator.make('2').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0" name="Check for EMP_DTL_HIRE_DD" result="Success"/><result:results expectedAssert="=" expectedValue="/" expression="'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" name="Check for EMP_DTL_SLASH2" result="Success"/><result:results expectedAssert="=" expectedValue="86" expression="BigDecimalCreator.make('86').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0" name="Check for EMP_DTL_HIRE_YY" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER4" name="Check for FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="32" expression="BigDecimalCreator.make('32').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0" name="Check for EMP_DTL_YRS_OF_SERVICE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER5" name="Check for FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="110.00" expression="BigDecimalCreator.make('110.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0" name="Check for EMP_DTL_WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER6" name="Check for FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="8.25" expression="BigDecimalCreator.make('8.25').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0" name="Check for EMP_DTL_OT" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER7" name="Check for FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="0.00" expression="BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0" name="Check for EMP_DTL_COMM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMPLOYEE_DTL.FILLER8" name="Check for FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="118.25" expression="BigDecimalCreator.make('118.25').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0" name="Check for EMP_DTL_TOTAL" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.16"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.BLANK_LINE.BLANK_LINE" name="Check for BLANK_LINE" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="4" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.Unit%20Test/Stubs/DNKTDB2X_RPTFILE_WRITE_01.stub.17"><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMP_TOTAL_DTL.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="TOTAL" expression="'TOTAL' eq result.arg0.EMP_TOTAL_DTL.FILLER1" name="Check for FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg0.EMP_TOTAL_DTL.FILLER2" name="Check for FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="1508.00" expression="BigDecimalCreator.make('1508.00').compareTo(result.arg0.EMP_TOTAL_DTL.EMP_GRAND_TOTAL) eq 0" name="Check for EMP_GRAND_TOTAL" result="Success"/></result:stubdataassertions></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="1" stub="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_ROLLBACK_1_SQL_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_ROLLBACK_1_SQL_01.stub.0"/></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="1" stub="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_Select_1_SQL_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_Select_1_SQL_01.stub.0"/></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="43" stub="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.0"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.1"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.2"><result:results expectedAssert="=" expectedValue="95.00" expression="BigDecimalCreator.make('95.00').compareTo(result.arg0.WAGES.WAGES) eq 0" name="Check for WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg1.OVERTIME.OVERTIME) eq 0" name="Check for OVERTIME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM.COMM) eq 0" name="Check for COMM" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.3"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.4"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.5"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.6"><result:results expectedAssert="=" expectedValue="75.00" expression="BigDecimalCreator.make('75.00').compareTo(result.arg0.WAGES.WAGES) eq 0" name="Check for WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg1.OVERTIME.OVERTIME) eq 0" name="Check for OVERTIME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM.COMM) eq 0" name="Check for COMM" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.7"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.8"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.9"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.10"><result:results expectedAssert="=" expectedValue="100.00" expression="BigDecimalCreator.make('100.00').compareTo(result.arg0.WAGES.WAGES) eq 0" name="Check for WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg1.OVERTIME.OVERTIME) eq 0" name="Check for OVERTIME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM.COMM) eq 0" name="Check for COMM" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.11"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.12"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.13"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.14"><result:results expectedAssert="=" expectedValue="120.00" expression="BigDecimalCreator.make('120.00').compareTo(result.arg0.WAGES.WAGES) eq 0" name="Check for WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="18.00" expression="BigDecimalCreator.make('18.00').compareTo(result.arg1.OVERTIME.OVERTIME) eq 0" name="Check for OVERTIME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM.COMM) eq 0" name="Check for COMM" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.15"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.16"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.17"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.18"><result:results expectedAssert="=" expectedValue="101.75" expression="BigDecimalCreator.make('101.75').compareTo(result.arg0.WAGES.WAGES) eq 0" name="Check for WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg1.OVERTIME.OVERTIME) eq 0" name="Check for OVERTIME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM.COMM) eq 0" name="Check for COMM" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.19"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.20"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.21"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="3" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.22"><result:results expectedAssert="=" expectedValue="110.00" expression="BigDecimalCreator.make('110.00').compareTo(result.arg0.WAGES.WAGES) eq 0" name="Check for WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="8.25" expression="BigDecimalCreator.make('8.25').compareTo(result.arg1.OVERTIME.OVERTIME) eq 0" name="Check for OVERTIME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM.COMM) eq 0" name="Check for COMM" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.23"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.24"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.25"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.26"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.27"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.28"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.29"/><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_EMPLOYEE_CURSOR_SQL_01.stub.30"/></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="4" stub="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_Update_1_SQL_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="4" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_Update_1_SQL_01.stub.Unit%20Test/Stubs/DNKTDB2X_Update_1_SQL_01.stub.0"><result:results expectedAssert="=" expectedValue="880.00" expression="BigDecimalCreator.make('880.00').compareTo(result.arg0.WAGES.WAGES) eq 0" name="Check for WAGES" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg1.OVERTIME.OVERTIME) eq 0" name="Check for OVERTIME" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM.COMM) eq 0" name="Check for COMM" result="Success"/><result:results expectedAssert="=" expectedValue="02175" expression="'02175' eq result.arg3.EMP_NUM.EMP_NUM" name="Check for EMP_NUM" result="Success"/></result:stubdataassertions></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="11" stub="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_Insert_1_SQL_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="11" stubdata="platform:/resource/CWCC_TTT_DNKTDB2X_Project_Stubs/Unit%20Test/Output/Last%20Execution/DNKTDB2X_Scenario_1.archive#Unit%20Test/Stubs/DNKTDB2X_Insert_1_SQL_01.stub.Unit%20Test/Stubs/DNKTDB2X_Insert_1_SQL_01.stub.0"><result:results expectedAssert="=" expectedValue="02175" expression="'02175' eq result.arg0.EMP_NUM.EMP_NUM" name="Check for EMP_NUM" result="Success"/><result:results expectedAssert="=" expectedValue="H" expression="'H' eq result.arg1.WA_EMP_TYPE.WA_EMP_TYPE" name="Check for WA_EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="2" expression="BigDecimalCreator.make('2').compareTo(result.arg2.REGION.REGION) eq 0" name="Check for REGION" result="Success"/><result:results expectedAssert="=" expectedValue="KATIE WILLIAMS" expression="'KATIE WILLIAMS' eq result.arg3.WA_EMP_NAME.WA_EMP_NAME" name="Check for WA_EMP_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="123 MAIN ST" expression="'123 MAIN ST' eq result.arg4.WA_EMP_STREET.WA_EMP_STREET" name="Check for WA_EMP_STREET" result="Success"/><result:results expectedAssert="=" expectedValue="COLUMBUS" expression="'COLUMBUS' eq result.arg5.WA_EMP_CITY.WA_EMP_CITY" name="Check for WA_EMP_CITY" result="Success"/><result:results expectedAssert="=" expectedValue="OH" expression="'OH' eq result.arg6.WA_EMP_STATE.WA_EMP_STATE" name="Check for WA_EMP_STATE" result="Success"/><result:results expectedAssert="=" expectedValue="43082" expression="'43082' eq result.arg7.WA_EMP_ZIP.WA_EMP_ZIP" name="Check for WA_EMP_ZIP" result="Success"/><result:results expectedAssert="=" expectedValue="961002" expression="'961002' eq result.arg8.HIREDATE.HIREDATE" name="Check for HIREDATE" result="Success"/><result:results expectedAssert="=" expectedValue="32" expression="BigDecimalCreator.make('32').compareTo(result.arg9.HOURS.HOURS) eq 0" name="Check for HOURS" result="Success"/><result:results expectedAssert="=" expectedValue="27.50" expression="BigDecimalCreator.make('27.50').compareTo(result.arg10.RATE.RATE) eq 0" name="Check for RATE" result="Success"/></result:stubdataassertions></result:stubAssertion></result:testcases></result:testscenarios></result:testsuite></result:result>